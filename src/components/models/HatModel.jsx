/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const HatModel = React.memo(function HatModel(props) {
  // Use React.memo for performance optimization
  const { nodes, materials } = useGLTF("/models/hat-transformed.glb");

  const modelRef = useRef();

  useFrame(() => {
    modelRef.current.rotation.y += 0.007;
  });
  return (
    <group
      {...props}
      dispose={null}
      ref={modelRef}
      scale={[0.65, 0.65, 0.65]}
      rotation={[0.4, -1, 0]}
      position={[0, 0.16, 0]}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane002_digital_displays_0.geometry}
        material={materials.digital_displays}
        position={[0, 0.289, 3.122]}
        rotation={[-1.469, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane002_digital_display_sides_0.geometry}
        material={materials.digital_display_sides}
        position={[0, 0.289, 3.122]}
        rotation={[-1.469, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle_metal_2_0.geometry}
        material={materials.metal_2}
        position={[0, 0, -0.948]}
        rotation={[0, Math.PI / 2, 0]}
        scale={1.238}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle_metal_1_0.geometry}
        material={materials.metal_1}
        position={[0, 0, -0.948]}
        rotation={[0, Math.PI / 2, 0]}
        scale={1.238}
      />
    </group>
  );
});

export default HatModel;
useGLTF.preload("/models/hat-transformed.glb");
